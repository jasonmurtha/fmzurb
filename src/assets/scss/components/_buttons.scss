////
/// Custom Revisions to the Foundation Button Design
////

/// Padding inside buttons, maps along with button-sizes
/// @type Number
$button-padding: 0.85em 1.5em !default;

/// Sizes for buttons.
/// @type Map
$button-sizes: (
  small: 0.7rem,
  default: 0.875rem,
  large: 1rem,
) !default;

/// Palette for ButtonShadow
/// @type Map
$button-palette: (
  primary: $fm-orange,
  secondary: $fm-blue,
  tertiary: $fm-green,
  default: $medium-gray
) !default;

/// Margin around buttons.
/// @type Number
$button-margin: 0 !default;

/// Default background color for buttons.
/// @type Color
$button-background: $fm-gray !default;

/// Font color for buttons.
/// @type Color
$button-color: $white !default;


/// Background color for buttons on hover.
/// @type Color
$button-background-hover: scale-color($button-background, $lightness: -15%) !default;

/// Border radius for buttons, defaulted to global-radius.
/// @type Number
$button-radius: $global-radius !default;

/// opacity for a disabled button.
/// @type Number
$button-opacity-disabled: 0.25 !default;

/// Adds disabled styles to a button by fading the element, reseting the cursor, and disabling pointer events.
@mixin button-disabled {
  opacity: $button-opacity-disabled;
  cursor: not-allowed;

  &:hover, &:focus, &:active {
    background-color: $button-background;
    color: $button-color;
  }
}

.button {
	border: 2px solid $button-background;
  background: $button-background;
  color: $button-color;
	border-radius: $button-radius;
  font-weight: $global-weight-bold;
  font-size: map-get($button-sizes, default);
	text-transform: uppercase;
  text-align: center;
  @include disable-mouse-outline;
  display: inline-block;
  line-height: 1;
  cursor: pointer;
  -webkit-appearance: none;  
  transition: background-color 0.25s ease-out, color 0.25s ease-out, border-color 0.25s ease-out;
  vertical-align: middle;
  padding: $button-padding;
  margin: $button-margin;
  // Sizes
  @each $size, $value in map-remove($button-sizes, default) {
    &.#{$size} {
      font-size: $value;     
      @if $size == large {
        border-width: 3px;
        @include breakpoint(xlarge) {
          font-size: rem-calc(22);
        }
      }
    }
  }  
	&:hover,
  &:focus,
  &:active  {
		background: $button-background-hover;
    color: $button-background;
	}
  
 @each $name, $color in $button-palette {
    &.#{$name} {
      background: $color;
      border-color: $color;
      &:hover {
        background: $button-color;
        color: $color;
      }
    }
  } 
	&.hollow {
    background: transparent;
      color: $white;
      border-color: $white;
    &:hover,
    &:focus,
    &:active {
      color: $white;
      background: rgba($white, 0.25);
    }
	}
  // Disabled style
  &.disabled,
  &[disabled] {
    @include button-disabled;
  }
  svg { 
    fill: currentColor;
    height: 1em;
    width: 1.25em;
    opacity: 0.9;
    vertical-align: bottom;
  }
}
.button-group .button {
  border-radius: 0;
}
 
