// trying to solve for the fact that design want the full gutter to the left and right, not half a gutter, like Foundation defaults to.
.row {
  padding-left: $gutter/2;
  padding-right:  $gutter/2;
  &.column {
    padding-left: $gutter;
    padding-right: $gutter;
  }
}
.row .column .row {
  padding-right: 0;
  padding-left: 0;
}
.section-padding {
  padding-top: 2rem;
  padding-bottom: 2rem;
	@include breakpoint(xlarge) {
    padding-top: rem-cal(55px);
    padding-bottom: rem-calc(45px);
	}
}
.position-relative {
  position: relative;
}
/// Vertically centers the element inside of its first non-static parent
.vertical-center-full {
  @include vertical-center;
  right: 0;
  left: 0;
  position: relative;
}
/// Horizontally centers the element inside of its first non-static parent
.horizontal-center {
  @include horizontal-center;
}
.two-column-layout {
  .two-column-row {
    @include clearfix;     
    @include breakpoint(large) {  
      @include grid-column-row($gutter);  
    }  
    &.row {
      padding: 0;
    }
  } 
}
main {
	figure {
		margin: $global-margin * 2 0;
		img {
			margin: 0 0 1rem;
		}
		figcaption {
			font-size: rem-calc(14);
			@include breakpoint(medium) {
				font-size: rem-calc(12);
			}
		}
	}
  &.column {
    padding: $gutter * 2.5 $gutter $gutter * 2 $gutter;    
    @include breakpoint(large) { 
      max-width: 55em;    
      width: calc(100% - 23em);
      padding-right: 2em;
      float: left;
    }
    @include breakpoint(xlarge) {
      max-width: 59em;    
      @include grid-column(1, $gutter * 2); 
      @include grid-column-size(66.666666%);
      padding-right: 4em;
    }
    @include breakpoint(xxlarge) {
      max-width: 61.5em;    
      padding-right: 6.5em;
    }
    > .jut {
      @include breakpoint(large) { 
        width: calc(100% + 2em); 
      }
      @include breakpoint(xlarge) { 
        width: calc(100% + 4em);  
      }
      @include breakpoint(xxlarge) { 
        width: calc(100% + 6.5em);  
      }
    } 
  }    
}
aside.column {
  @include breakpoint (small only) {
    @include grid-column-collapse;
    clear: both;
    float: none;
  }
  @include breakpoint (medium only) {
    @include grid-column-collapse;
    clear: both;
    float: none;
  }
  @include breakpoint(large) {
    float: left;
    width: 23em;
    padding: 0 $gutter $gutter * 2.5;
  }
  @include breakpoint(xlarge) {
    @include grid-column(1, $gutter * 2);
    @include grid-column-size(33.333333%);
  }
  position: relative;
  z-index: 2;
  section {
    padding: $global-padding * 1.9 $global-padding * 2;
    margin: 0;
    > .row {
      margin: 0;
    }
  }
} 
.grid-2col {
  aside {
    @include breakpoint(large) {
      padding-top: $gutter * 2.5;
    }
  }
}
.grid-2col-tertiary > .page-title {
  h1 {
    @include breakpoint(large) {      
      padding-right: 23rem;
    }  
    @include breakpoint(xlarge) { 
      padding-right: 33.3%;
    }
  }
}
.grid-2col-article > .two-column-layout aside.column {
  @media print and #{breakpoint(large)} {
    padding-top: 300px; // counteract the negative top margin when printing
  }
}
.grid-2col-tertiary > .two-column-layout { 
  @media print and #{breakpoint(large)} {
    .tertiary-nav {
       padding-top: 70px;  // counteract the negative top margin when printing
    }    
  }
}

